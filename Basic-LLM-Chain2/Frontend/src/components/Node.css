.node {
  width: 320px;
  min-height: 400px;
  display: flex;
  flex-direction: column;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  background-color: var(--color-surface);
  position: relative;
  overflow: hidden;
  box-shadow: var(--shadow-sm);
  font-family: var(--font-sans);
}

.node-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px;
  background-color: var(--color-surface-hover);
  border-bottom: 1px solid var(--color-border);
}

.node-name-input {
  flex: 1;
  margin-right: 10px;
  padding: 8px 10px;
  border: 1px solid var(--color-input-border);
  border-radius: var(--radius-sm);
  background-color: var(--color-surface);
  font-size: 14px;
  color: var(--color-foreground);
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05);
}

.run-button {
  background-color: var(--color-success);
  color: white;
  border: none;
  border-radius: var(--radius-sm);
  padding: 8px 16px;
  cursor: pointer;
  font-weight: 500;
  font-size: 14px;
  transition: all 0.2s ease;
}

.run-button:hover {
  background-color: var(--color-success-hover);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.run-button.running {
  background-color: #9e9e9e;
  cursor: not-allowed;
}

/* General styling for sections within a node body */
.node-section {
  padding: 10px 12px; /* Consistent padding with header */
  border-bottom: 1px solid var(--color-border);
}

.node-section:last-child {
  border-bottom: none; /* Remove border for the last section */
}

.config-toggle-section {
  /* specific styles for the toggle button container if needed */
  /* For now, it will use .node-section for padding and border */
  background-color: var(--color-surface-hover); /* Slightly different background */
}

.config-toggle-button.app-button-subtle {
  width: 100%;
  padding: 8px 12px;
  background-color: var(--color-surface-elevated, #f8f9fa);
  color: var(--color-primary);
  border: 1px solid var(--color-primary-light, #a3cfff);
  border-radius: var(--radius-sm);
  cursor: pointer;
  text-align: center;
  font-size: 0.9em;
  transition: background-color 0.2s ease, box-shadow 0.2s ease;
}

.config-toggle-button.app-button-subtle:hover {
  background-color: var(--color-primary-lighter, #e6f7ff);
  border-color: var(--color-primary);
  box-shadow: 0 1px 3px rgba(0,0,0,0.05);
}

/* New Connected Nodes Section Styles */
.connected-nodes-section {
  /* padding: 12px; */ /* Replaced by .node-section */
  background: linear-gradient(to right, rgba(235, 245, 255, 0.3), rgba(240, 249, 255, 0.5));
  /* border-bottom: 1px solid var(--color-border); */ /* Replaced by .node-section */
}

.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
  margin-top: 10px;
  border-top: 1px solid var(--border-color-subtle);
  /* Ensure it uses node-section for consistency */
}

.section-header span {
  font-size: 14px;
  font-weight: 500;
  color: var(--color-foreground);
}

.connected-nodes-list {
  display: flex;
  flex-direction: column;
  gap: 8px;
  max-height: 180px;
  overflow-y: auto;
}

.connected-node-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 10px;
  background-color: rgba(255, 255, 255, 0.7);
  border-radius: 4px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.connected-node-checkbox {
  display: flex;
  align-items: center;
  gap: 6px;
  font-size: 13px;
  color: var(--color-foreground);
}

.connected-node-checkbox input {
  margin: 0;
}

.insert-variable-button {
  background-color: var(--color-primary-lighter, #e6f7ff);
  border: 1px solid var(--color-primary-light, #bae0ff);
  border-radius: 4px;
  padding: 5px 10px;
  font-size: 13px;
  color: var(--color-primary, #0066cc);
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 5px;
}

.insert-variable-button:hover {
  background-color: var(--color-primary, #0066cc);
  color: white;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
  transform: translateY(-1px);
}

.insert-icon {
  font-size: 12px;
  font-weight: bold;
}

.no-connections-message {
  text-align: center;
  padding: 12px;
  color: var(--color-foreground-muted, #666);
  font-style: italic;
  font-size: 13px;
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: 4px;
}

.help-button {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: var(--color-primary);
  color: white;
  font-size: 12px;
  font-weight: bold;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s;
}

.help-button:hover {
  background-color: var(--color-primary-hover);
}

/* Keep existing tooltip styles */
.tooltip {
  position: relative;
  margin-bottom: 10px;
  padding: 10px;
  background-color: #fff;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
  font-size: 12px;
  color: var(--color-foreground);
  box-shadow: var(--shadow-sm);
  line-height: 1.5;
}

.tooltip code {
  background-color: rgba(59, 130, 246, 0.1);
  padding: 2px 4px;
  border-radius: 4px;
  font-family: monospace;
  color: var(--color-primary);
}

/* New flexible text area container styles */
.prompt-area,
.output-area {
  position: relative;
  width: 100%;
  transition: all 0.3s ease;
}

.area-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 6px 12px;
  background-color: rgba(0, 0, 0, 0.03);
  font-size: 13px;
  font-weight: 500;
  color: var(--color-foreground);
  border-top: 1px solid var(--color-border);
}

.area-controls {
  display: flex;
  gap: 8px;
}

.resize-handle {
  cursor: ns-resize;
  background: none;
  border: none;
  color: var(--color-foreground-muted);
  font-size: 10px;
  padding: 0 4px;
  display: flex;
  align-items: center;
}

.expand-button {
  background: none;
  border: none;
  cursor: pointer;
  color: var(--color-primary);
  font-size: 16px;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  border-radius: 4px;
}

.expand-button:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

/* Expanded state styles */
.expanded {
  z-index: 10;
}

.expanded-node {
  z-index: 10;
}

.prompt-area.expanded .prompt-textarea,
.output-area.expanded .output-textarea {
  background-color: white;
  border: 1px solid var(--color-primary-light);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

/* Modified textarea styles to work with the new container system */
.prompt-textarea,
.output-textarea {
  width: 100%;
  min-height: 80px;
  padding: 12px;
  font-size: 14px;
  line-height: 1.5;
  border: none;
  resize: none; /* Let our custom resize handle do the work */
  outline: none;
  box-sizing: border-box;
  font-family: var(--font-sans);
  transition: all 0.3s ease;
  overflow-y: auto;
}

.prompt-textarea {
  background-color: #f8fafc;
  color: var(--color-foreground);
}

.output-textarea {
  background-color: #f8fafc;
  color: var(--color-foreground);
  margin-top: 10px; /* Add some space above the output area */
}

/* When a node is expanded, make it stand out from other nodes */
.expanded-node {
  box-shadow: 0 0 0 2px var(--color-primary), var(--shadow-lg) !important;
}

/* Handle styles */
.react-flow__handle {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: var(--color-primary);
  border: 2px solid white;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);
}

.react-flow__handle-top {
  top: -5px;
  left: 50%;
}

.react-flow__handle-bottom {
  bottom: -5px;
  left: 50%;
}

/* --- LLM Configuration Section --- */
.llm-config-section {
  background-color: var(--background-color-light);
  padding: 10px;
  margin-top: 10px;
  border-top: 1px solid var(--border-color-subtle);
}

.llm-config-section .section-header {
  font-weight: bold;
  margin-bottom: 8px;
  color: var(--text-color-strong);
}

.config-item {
  display: flex;
  align-items: center;
  margin-bottom: 6px;
}

.config-item label {
  flex: 1;
  margin-right: 8px;
  font-size: 0.9em;
  color: var(--text-color-default);
}

.llm-config-input {
  flex: 2;
  padding: 6px;
  border: 1px solid var(--border-color-input);
  border-radius: 4px;
  background-color: var(--background-color-input);
  color: var(--text-color-input);
  font-size: 0.9em;
}

/* Ensure select dropdowns have consistent styling */
.llm-config-select {
  /* Add any specific select styling here if needed, e.g., appearance: none; for custom arrow */
  /* For now, it will inherit most styles from .llm-config-input */
  height: auto; /* Or a specific height to match text inputs if needed */
  line-height: normal; /* Reset line-height if it causes issues */
}

.llm-config-input:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px var(--color-primary-light);
}

/* Add a border to selected nodes for better visual feedback */
.node.selected {
  border: 2px solid var(--color-primary);
  box-shadow: 0 0 10px var(--color-primary-light);
}

/* Styling for slider items */
.slider-item label {
  display: flex; /* Align value display with label text */
  justify-content: space-between; /* Push value to the right */
  width: 100%; /* Ensure label takes full width to allow justify-content to work */
}

.slider-item label span {
  font-weight: normal; /* Value doesn't need to be bold */
  color: var(--color-primary); /* Make value stand out a bit */
  min-width: 40px; /* Ensure space for the value */
  text-align: right;
}

.llm-config-slider {
  /* Specific slider styling if needed - browser defaults can be inconsistent */
  /* For example, to customize track and thumb: */
  /* appearance: none; */
  /* width: 100%; */
  /* height: 8px; */
  /* background: var(--border-color-input); */
  /* border-radius: 4px; */
  cursor: pointer;
}

/* Basic thumb styling (optional, browser specific selectors often needed for full control) */
/* 
.llm-config-slider::-webkit-slider-thumb {
  appearance: none;
  width: 16px;
  height: 16px;
  background: var(--color-primary);
  border-radius: 50%;
  cursor: pointer;
}

.llm-config-slider::-moz-range-thumb {
  width: 16px;
  height: 16px;
  background: var(--color-primary);
  border-radius: 50%;
  cursor: pointer;
  border: none;
}
*/ 