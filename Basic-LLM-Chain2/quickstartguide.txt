Basic-LLM-Chain2 Quick Start Guide
=================================

This guide will help you set up and run the Basic-LLM-Chain2 project, which consists of a FastAPI backend and a React frontend.

Prerequisites
------------
- Python 3.8 or higher
- Node.js 16 or higher
- MongoDB (running locally or accessible via connection string)
- OpenAI API key

Backend Setup
------------
1. Navigate to the Backend directory:
   ```bash
   cd Backend
   ```

2. Create and activate a virtual environment (recommended):
   ```bash
   python -m venv venv
   source venv/bin/activate  # On Windows: venv\Scripts\activate
   ```

3. Install dependencies:
   ```bash
   pip install -r requirements.txt
   ```

4. Create a .env file in the Backend directory with the following variables:
   ```
   OPENAI_API_KEY=your_openai_api_key
   MONGODB_URI=your_mongodb_connection_string
   ```

5. Start the backend server:
   ```bash
   uvicorn main:app --reload
   ```
   The server will run on http://localhost:8000

Frontend Setup
-------------
1. Navigate to the Frontend directory:
   ```bash
   cd Frontend
   ```

2. Install dependencies:
   ```bash
   npm install
   ```

3. Start the development server:
   ```bash
   npm run dev
   ```
   The frontend will run on http://localhost:3000

Using the Application
-------------------
1. Open your browser and navigate to http://localhost:3000
2. The application provides a visual interface for creating and managing LLM chains
3. You can:
   - Add nodes to your chain
   - Connect nodes to create workflows
   - Configure node parameters
   - Execute the chain and view results

Troubleshooting
--------------
- If you encounter CORS issues, ensure both frontend and backend are running
- Check that your MongoDB connection string is correct
- Verify your OpenAI API key is valid and has sufficient credits
- For backend errors, check the terminal running uvicorn
- For frontend errors, check the browser's developer console

API Documentation
----------------
Once the backend is running, you can access the API documentation at:
- Swagger UI: http://localhost:8000/docs
- ReDoc: http://localhost:8000/redoc

Common Issues
------------
1. CORS errors: Ensure both servers are running and the frontend is making requests to the correct backend URL
2. MongoDB connection issues: Verify your connection string and ensure MongoDB is running
3. OpenAI API errors: Check your API key and ensure you have sufficient credits
4. Port conflicts: If ports 3000 or 8000 are in use, you can modify the startup commands to use different ports

Need Help?
---------
If you encounter any issues not covered in this guide, please:
1. Check the project's README.md for additional information
2. Review the API documentation
3. Check the browser's console and backend logs for error messages
